* 9.4 Exercises
** Review Questions
*** 1. Why is debugger use generally limited on Erlang?
    - Many concurrent processes and additionally lack of ability to break
      execution of one of them.
*** 2. What are the options you can use to trace OTP processes?
    - `sys` and all other tracing libraries that you can normally use.
*** 3. What determines whether a given set of functions or processes get traced?
    - Trace pattern, you are specifying match spec like in `ets:match/2`
      function. Also you can limit processes by PIDs, function by arities and
      input arguments.
*** 4. How can you stop tracing with recon_trace? With other tools?
    - You can either set a limit for traced function calls or do
      `recon_trace:clear/0`. The same goes with `redbug` (about limits), you
      need to be careful with other tools.
*** 5. How can you trace non-exported function calls?
    - You have to use `dbg:tpl` to do that. For other tools, you have to just
      use them, they're handling that case.
** Open-ended Questions
*** 1. When would you want to move time stamping of traces to the VMâ€™s trace mechanisms directly? What would be a possible downside of doing this?
    - Possibly performance cost and risk of killing node. Benefit of that will
      be fine grain control, more details and more features available for you.
*** 2. Imagine that traffic sent out of a node does so over SSL, over a multi-tenant system. However, due to wanting to validate data sent (following a customer complain), you need to be able to inspect what was seen clear text. Can you think up a plan to be able to snoop in the data sent to their end through the ssl socket, without snooping on the data sent to any other customer?
    - If you can limit it by arguments or some kind of PIDs range. It'd be
      easier if a dedicated Erlang node would be in use for them.
** Hands-On
*** 1. Can chatty processes (council_member) message themselves? (hint: can this work with registered names? Do you need to check the chattiest process and see if it messages itself ?)
    - Yes they can. I can check they other processes and verify that they are not the chattiest one.
*** 2. Can you estimate the overall frequency at which messages are sent globally?
    - 200 messages per second.
*** 3. Can you crash a node using any of the tracing tools? (hint: dbg makes it easier due to its greater flexibility)
    - Yup, it is possible just specify all messages and all PIDs with `dbg`.
